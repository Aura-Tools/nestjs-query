{
    "root": true,
    "env": {
        "node": true,
        "jest": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2019,
        "sourceType": "module",
        "project": "./tsconfig.json",
        "createDefaultProgram": true
    },
    "plugins": [
        "@typescript-eslint",
        "prettier",
        "import",
        "jest"
    ],
    "extends": [
        "airbnb-base",
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "rules": {
        "prettier/prettier": "error",
        "import/no-unresolved": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        // Nest preferences
        "indent": [
            "error",
            2,
            {
                "SwitchCase": 1
            }
        ],
        // Needed for Nest injection
        "no-useless-constructor": 0,
        // Needed to import Nest Testing
        "import/no-extraneous-dependencies": "off",
        "no-empty-function": 0,
        // C2FO Preference
        "func-names": [
            "error",
            "always"
        ],
        "max-len": [
            "error",
            150,
            2,
            {
                "ignoreComments": false,
                "ignoreRegExpLiterals": true,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "ignoreUrls": true
            }
        ],
        // Just not practical
        "class-methods-use-this": 0,
        // Standard Nest class definition
        "import/prefer-default-export": 0,
        "max-classes-per-file": ["error", 5],
        "import/no-cycle": 0
    },
    "settings": {
        "import/extensions": [
            ".ts"
        ],
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts"
            ]
        },
        "import/resolver": {
            "node": {
                "extensions": [
                    ".ts"
                ]
            },
            "typescript": {
                "alwaysTryTypes": true
            }
        }
    },
    "overrides": [
        {
            "files": [
                "*.ts",
                "*.tsx"
            ],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": [
                    "error",
                    {
                        "allowExpressions": true
                    }
                ]
            }
        },
        {
            "files": [
                "*.spec.ts"
            ],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": "off",
                "@typescript-eslint/ban-ts-ignore": "off",
                "@typescript-eslint/no-non-null-assertion": "off",
                "@typescript-eslint/no-explicit-any": "off"
            }
        }
    ]
}
