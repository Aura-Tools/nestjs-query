name: PR

# Run on all pull requests
on: [ pull_request ]

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:

  prepare-env:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_HEAD_REF: ${{ steps.GITHUB_HEAD_REF.outputs.value }}
      GITHUB_BASE_REF: ${{ steps.GITHUB_BASE_REF.outputs.value }}
    steps:
      - uses: nrwl/last-successful-commit-action@v1
        id: last_successful_commit
        with:
          branch: 'master'
          workflow_id: 'release.yml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - id: GITHUB_HEAD_REF
        run: echo "::set-output name=value::$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}})"

      - id: GITHUB_BASE_REF
        run: echo "::set-output name=value::$(echo ${{ steps.last_successful_commit.outputs.commit_hash }}})"

  build:
    needs: [ prepare-env ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-${{ github.sha }}
          restore-keys: |
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-
            ${{ env.NX_CACHE }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: GIT config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: nx affected:version
        run: node ./tools/scripts/run-many.js version origin/${{ needs.prepare-env.outputs.GITHUB_HEAD_REF }} ${{ needs.prepare-env.outputs.GITHUB_BASE_REF }}

      - name: nx affected:build
        run: node ./tools/scripts/run-many.js build origin/${{ needs.prepare-env.outputs.GITHUB_HEAD_REF }} ${{ needs.prepare-env.outputs.GITHUB_BASE_REF }}

  unit-test:
    needs: [ prepare-env ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-${{ github.sha }}
          restore-keys: |
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-
            ${{ env.NX_CACHE }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: nx affected:test
        run: node ./tools/scripts/run-many.js test origin/${{ needs.prepare-env.outputs.GITHUB_HEAD_REF }} ${{ needs.prepare-env.outputs.GITHUB_BASE_REF }}

  e2e-test:
    needs: [ prepare-env ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
        db-type: ['postgres', 'mysql']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-${{ github.sha }}
          restore-keys: |
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-
            ${{ env.NX_CACHE }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: docker compose
        run: docker-compose -f ./examples/docker-compose.yml up -d

      - name: nx affected:e2e
        run: node ./tools/scripts/run-many.js e2e origin/${{ needs.prepare-env.outputs.GITHUB_HEAD_REF }} ${{ needs.prepare-env.outputs.GITHUB_BASE_REF }}
        env:
          NESTJS_QUERY_DB_TYPE: ${{ matrix.db-type }}